# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include("cmake/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

include("cmake/VsConfigurations.cmake")

project(Onlooker
	VERSION
		0.1.0
)

include("cmake/Qt5Helpers.cmake")

# Packages
find_package(Qt5
	COMPONENTS
		Widgets
		PrintSupport
)

# Target Cutelooker
if(Qt5_FOUND) # qt5
	set(CMKR_TARGET Cutelooker)
	set(Cutelooker_SOURCES "")

	list(APPEND Cutelooker_SOURCES
		"Cutelooker/InformationDialog.cpp"
		"Cutelooker/LogDialog.cpp"
		"Cutelooker/LogViewTextEdit.cpp"
		"Cutelooker/MainWindow.cpp"
		"Cutelooker/OverlayFactoryFilter.cpp"
		"Cutelooker/main.cpp"
		"Cutelooker/qcustomplot.cpp"
		"Cutelooker/InformationDialog.h"
		"Cutelooker/LogDialog.h"
		"Cutelooker/LogViewTextEdit.h"
		"Cutelooker/MainWindow.h"
		"Cutelooker/OnlookerData.h"
		"Cutelooker/OverlayFactoryFilter.h"
		"Cutelooker/qcustomplot.h"
		"Cutelooker/resource.h"
		"Cutelooker/InformationDialog.ui"
		"Cutelooker/LogDialog.ui"
		"Cutelooker/MainWindow.ui"
		"Cutelooker/resource.qrc"
	)

	if(WIN32) # windows
		list(APPEND Cutelooker_SOURCES
			"Cutelooker/Cutelooker.rc"
		)
	endif()

	list(APPEND Cutelooker_SOURCES
		cmake.toml
	)

	set(CMKR_SOURCES ${Cutelooker_SOURCES})
	add_executable(Cutelooker)

	if(Cutelooker_SOURCES)
		target_sources(Cutelooker PRIVATE ${Cutelooker_SOURCES})
	endif()

	get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
	if(NOT CMKR_VS_STARTUP_PROJECT)
		set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT Cutelooker)
	endif()

	source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${Cutelooker_SOURCES})

	target_compile_features(Cutelooker PRIVATE
		cxx_std_17
	)

	target_include_directories(Cutelooker PRIVATE
		Cutelooker
	)

	target_link_libraries(Cutelooker PRIVATE
		Qt5::Widgets
		Qt5::PrintSupport
	)

	if(MSVC) # msvc
		target_link_options(Cutelooker PRIVATE
			"/SUBSYSTEM:WINDOWS"
		)
	endif()

	include("cmake/Qt5DeployTarget.cmake")

	unset(CMKR_TARGET)
	unset(CMKR_SOURCES)
endif()

# Target Onlooker
if(WIN32) # windows
	set(CMKR_TARGET Onlooker)
	set(Onlooker_SOURCES "")

	list(APPEND Onlooker_SOURCES
		"Onlooker/Onlooker.cpp"
		"Onlooker/native.h"
	)

	list(APPEND Onlooker_SOURCES
		cmake.toml
	)

	set(CMKR_SOURCES ${Onlooker_SOURCES})
	add_executable(Onlooker)

	if(Onlooker_SOURCES)
		target_sources(Onlooker PRIVATE ${Onlooker_SOURCES})
	endif()

	get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
	if(NOT CMKR_VS_STARTUP_PROJECT)
		set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT Onlooker)
	endif()

	source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${Onlooker_SOURCES})

	set_target_properties(Onlooker PROPERTIES
		MSVC_RUNTIME_LIBRARY
			"MultiThreaded$<$<CONFIG:Debug>:Debug>"
	)

	unset(CMKR_TARGET)
	unset(CMKR_SOURCES)
endif()

